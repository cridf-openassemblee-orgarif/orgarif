/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records;


import orgarif.jooq.generated.tables.FormerMailTable;

import java.time.Instant;
import java.util.UUID;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormerMailRecord extends UpdatableRecordImpl<FormerMailRecord> implements Record5<UUID, UUID, String, String, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.former_mail.id</code>.
     */
    public void setId(@Nonnull UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.former_mail.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.former_mail.user_id</code>.
     */
    public void setUserId(@Nonnull UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.former_mail.user_id</code>.
     */
    @Nonnull
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.former_mail.mail</code>.
     */
    public void setMail(@Nonnull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.former_mail.mail</code>.
     */
    @Nonnull
    public String getMail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.former_mail.dirty_mail</code>.
     */
    public void setDirtyMail(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.former_mail.dirty_mail</code>.
     */
    @Nullable
    public String getDirtyMail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.former_mail.creation_date</code>.
     */
    public void setCreationDate(@Nonnull Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.former_mail.creation_date</code>.
     */
    @Nonnull
    public Instant getCreationDate() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row5<UUID, UUID, String, String, Instant> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row5<UUID, UUID, String, String, Instant> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return FormerMailTable.FORMER_MAIL.ID;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return FormerMailTable.FORMER_MAIL.USER_ID;
    }

    @Override
    @Nonnull
    public Field<String> field3() {
        return FormerMailTable.FORMER_MAIL.MAIL;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return FormerMailTable.FORMER_MAIL.DIRTY_MAIL;
    }

    @Override
    @Nonnull
    public Field<Instant> field5() {
        return FormerMailTable.FORMER_MAIL.CREATION_DATE;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public String component3() {
        return getMail();
    }

    @Override
    @Nullable
    public String component4() {
        return getDirtyMail();
    }

    @Override
    @Nonnull
    public Instant component5() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public String value3() {
        return getMail();
    }

    @Override
    @Nullable
    public String value4() {
        return getDirtyMail();
    }

    @Override
    @Nonnull
    public Instant value5() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public FormerMailRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public FormerMailRecord value2(@Nonnull UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    @Nonnull
    public FormerMailRecord value3(@Nonnull String value) {
        setMail(value);
        return this;
    }

    @Override
    @Nonnull
    public FormerMailRecord value4(@Nullable String value) {
        setDirtyMail(value);
        return this;
    }

    @Override
    @Nonnull
    public FormerMailRecord value5(@Nonnull Instant value) {
        setCreationDate(value);
        return this;
    }

    @Override
    @Nonnull
    public FormerMailRecord values(@Nonnull UUID value1, @Nonnull UUID value2, @Nonnull String value3, @Nullable String value4, @Nonnull Instant value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FormerMailRecord
     */
    public FormerMailRecord() {
        super(FormerMailTable.FORMER_MAIL);
    }

    /**
     * Create a detached, initialised FormerMailRecord
     */
    public FormerMailRecord(@Nonnull UUID id, @Nonnull UUID userId, @Nonnull String mail, @Nullable String dirtyMail, @Nonnull Instant creationDate) {
        super(FormerMailTable.FORMER_MAIL);

        setId(id);
        setUserId(userId);
        setMail(mail);
        setDirtyMail(dirtyMail);
        setCreationDate(creationDate);
    }
}
