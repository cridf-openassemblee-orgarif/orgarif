/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records;


import orgarif.jooq.generated.tables.MagicLinkTokenTable;

import java.time.Instant;
import java.util.UUID;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagicLinkTokenRecord extends UpdatableRecordImpl<MagicLinkTokenRecord> implements Record5<String, UUID, Boolean, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.magic_link_token.token</code>.
     */
    public void setToken(@Nonnull String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.magic_link_token.token</code>.
     */
    @Nonnull
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.magic_link_token.user_id</code>.
     */
    public void setUserId(@Nonnull UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.magic_link_token.user_id</code>.
     */
    @Nonnull
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.magic_link_token.validity</code>.
     */
    public void setValidity(@Nonnull Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.magic_link_token.validity</code>.
     */
    @Nonnull
    public Boolean getValidity() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.magic_link_token.creation_date</code>.
     */
    public void setCreationDate(@Nonnull Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.magic_link_token.creation_date</code>.
     */
    @Nonnull
    public Instant getCreationDate() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>public.magic_link_token.last_update_date</code>.
     */
    public void setLastUpdateDate(@Nonnull Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.magic_link_token.last_update_date</code>.
     */
    @Nonnull
    public Instant getLastUpdateDate() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row5<String, UUID, Boolean, Instant, Instant> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row5<String, UUID, Boolean, Instant, Instant> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<String> field1() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.TOKEN;
    }

    @Override
    @Nonnull
    public Field<UUID> field2() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.USER_ID;
    }

    @Override
    @Nonnull
    public Field<Boolean> field3() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.VALIDITY;
    }

    @Override
    @Nonnull
    public Field<Instant> field4() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.CREATION_DATE;
    }

    @Override
    @Nonnull
    public Field<Instant> field5() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.LAST_UPDATE_DATE;
    }

    @Override
    @Nonnull
    public String component1() {
        return getToken();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public Boolean component3() {
        return getValidity();
    }

    @Override
    @Nonnull
    public Instant component4() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Instant component5() {
        return getLastUpdateDate();
    }

    @Override
    @Nonnull
    public String value1() {
        return getToken();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public Boolean value3() {
        return getValidity();
    }

    @Override
    @Nonnull
    public Instant value4() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Instant value5() {
        return getLastUpdateDate();
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord value1(@Nonnull String value) {
        setToken(value);
        return this;
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord value2(@Nonnull UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord value3(@Nonnull Boolean value) {
        setValidity(value);
        return this;
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord value4(@Nonnull Instant value) {
        setCreationDate(value);
        return this;
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord value5(@Nonnull Instant value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    @Nonnull
    public MagicLinkTokenRecord values(@Nonnull String value1, @Nonnull UUID value2, @Nonnull Boolean value3, @Nonnull Instant value4, @Nonnull Instant value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MagicLinkTokenRecord
     */
    public MagicLinkTokenRecord() {
        super(MagicLinkTokenTable.MAGIC_LINK_TOKEN);
    }

    /**
     * Create a detached, initialised MagicLinkTokenRecord
     */
    public MagicLinkTokenRecord(@Nonnull String token, @Nonnull UUID userId, @Nonnull Boolean validity, @Nonnull Instant creationDate, @Nonnull Instant lastUpdateDate) {
        super(MagicLinkTokenTable.MAGIC_LINK_TOKEN);

        setToken(token);
        setUserId(userId);
        setValidity(validity);
        setCreationDate(creationDate);
        setLastUpdateDate(lastUpdateDate);
    }
}
