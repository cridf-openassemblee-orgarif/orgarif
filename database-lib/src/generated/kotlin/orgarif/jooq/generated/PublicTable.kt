/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import orgarif.jooq.generated.tables.AppUserTable
import orgarif.jooq.generated.tables.CommandLogTable
import orgarif.jooq.generated.tables.DeliberationTable
import orgarif.jooq.generated.tables.DepartementTable
import orgarif.jooq.generated.tables.DeploymentLogTable
import orgarif.jooq.generated.tables.DesignationTable
import orgarif.jooq.generated.tables.EluTable
import orgarif.jooq.generated.tables.InstanceTable
import orgarif.jooq.generated.tables.LienDeliberationTable
import orgarif.jooq.generated.tables.MagicLinkTokenTable
import orgarif.jooq.generated.tables.MailLogTable
import orgarif.jooq.generated.tables.NatureJuridiqueTable
import orgarif.jooq.generated.tables.OrganismeTable
import orgarif.jooq.generated.tables.RepresentantTable
import orgarif.jooq.generated.tables.SecteurTable
import orgarif.jooq.generated.tables.TypeStructureTable
import orgarif.jooq.generated.tables.UserFileTable
import orgarif.jooq.generated.tables.UserMailLogTable
import orgarif.jooq.generated.tables.UserSessionLogTable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PublicTable : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: PublicTable = PublicTable()
    }

    /**
     * The table <code>public.app_user</code>.
     */
    val APP_USER: AppUserTable get() = AppUserTable.APP_USER

    /**
     * The table <code>public.command_log</code>.
     */
    val COMMAND_LOG: CommandLogTable get() = CommandLogTable.COMMAND_LOG

    /**
     * The table <code>public.deliberation</code>.
     */
    val DELIBERATION: DeliberationTable get() = DeliberationTable.DELIBERATION

    /**
     * The table <code>public.departement</code>.
     */
    val DEPARTEMENT: DepartementTable get() = DepartementTable.DEPARTEMENT

    /**
     * The table <code>public.deployment_log</code>.
     */
    val DEPLOYMENT_LOG: DeploymentLogTable get() = DeploymentLogTable.DEPLOYMENT_LOG

    /**
     * The table <code>public.designation</code>.
     */
    val DESIGNATION: DesignationTable get() = DesignationTable.DESIGNATION

    /**
     * The table <code>public.elu</code>.
     */
    val ELU: EluTable get() = EluTable.ELU

    /**
     * The table <code>public.instance</code>.
     */
    val INSTANCE: InstanceTable get() = InstanceTable.INSTANCE

    /**
     * The table <code>public.lien_deliberation</code>.
     */
    val LIEN_DELIBERATION: LienDeliberationTable get() = LienDeliberationTable.LIEN_DELIBERATION

    /**
     * The table <code>public.magic_link_token</code>.
     */
    val MAGIC_LINK_TOKEN: MagicLinkTokenTable get() = MagicLinkTokenTable.MAGIC_LINK_TOKEN

    /**
     * The table <code>public.mail_log</code>.
     */
    val MAIL_LOG: MailLogTable get() = MailLogTable.MAIL_LOG

    /**
     * The table <code>public.nature_juridique</code>.
     */
    val NATURE_JURIDIQUE: NatureJuridiqueTable get() = NatureJuridiqueTable.NATURE_JURIDIQUE

    /**
     * The table <code>public.organisme</code>.
     */
    val ORGANISME: OrganismeTable get() = OrganismeTable.ORGANISME

    /**
     * The table <code>public.representant</code>.
     */
    val REPRESENTANT: RepresentantTable get() = RepresentantTable.REPRESENTANT

    /**
     * The table <code>public.secteur</code>.
     */
    val SECTEUR: SecteurTable get() = SecteurTable.SECTEUR

    /**
     * The table <code>public.type_structure</code>.
     */
    val TYPE_STRUCTURE: TypeStructureTable get() = TypeStructureTable.TYPE_STRUCTURE

    /**
     * The table <code>public.user_file</code>.
     */
    val USER_FILE: UserFileTable get() = UserFileTable.USER_FILE

    /**
     * The table <code>public.user_mail_log</code>.
     */
    val USER_MAIL_LOG: UserMailLogTable get() = UserMailLogTable.USER_MAIL_LOG

    /**
     * The table <code>public.user_session_log</code>.
     */
    val USER_SESSION_LOG: UserSessionLogTable get() = UserSessionLogTable.USER_SESSION_LOG

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        AppUserTable.APP_USER,
        CommandLogTable.COMMAND_LOG,
        DeliberationTable.DELIBERATION,
        DepartementTable.DEPARTEMENT,
        DeploymentLogTable.DEPLOYMENT_LOG,
        DesignationTable.DESIGNATION,
        EluTable.ELU,
        InstanceTable.INSTANCE,
        LienDeliberationTable.LIEN_DELIBERATION,
        MagicLinkTokenTable.MAGIC_LINK_TOKEN,
        MailLogTable.MAIL_LOG,
        NatureJuridiqueTable.NATURE_JURIDIQUE,
        OrganismeTable.ORGANISME,
        RepresentantTable.REPRESENTANT,
        SecteurTable.SECTEUR,
        TypeStructureTable.TYPE_STRUCTURE,
        UserFileTable.USER_FILE,
        UserMailLogTable.USER_MAIL_LOG,
        UserSessionLogTable.USER_SESSION_LOG
    )
}
