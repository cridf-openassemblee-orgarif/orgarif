/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records


import java.time.Instant
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl

import orgarif.jooq.generated.tables.UserSessionLogTable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserSessionLogRecord private constructor() : UpdatableRecordImpl<UserSessionLogRecord>(UserSessionLogTable.USER_SESSION_LOG), Record6<UUID?, String?, UUID?, UUID?, Instant?, String?> {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var springSessionId: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var userId: UUID
        set(value): Unit = set(2, value)
        get(): UUID = get(2) as UUID

    open var deploymentLogId: UUID
        set(value): Unit = set(3, value)
        get(): UUID = get(3) as UUID

    open var creationDate: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    open var ip: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<UUID?, String?, UUID?, UUID?, Instant?, String?> = super.fieldsRow() as Row6<UUID?, String?, UUID?, UUID?, Instant?, String?>
    override fun valuesRow(): Row6<UUID?, String?, UUID?, UUID?, Instant?, String?> = super.valuesRow() as Row6<UUID?, String?, UUID?, UUID?, Instant?, String?>
    override fun field1(): Field<UUID?> = UserSessionLogTable.USER_SESSION_LOG.ID
    override fun field2(): Field<String?> = UserSessionLogTable.USER_SESSION_LOG.SPRING_SESSION_ID
    override fun field3(): Field<UUID?> = UserSessionLogTable.USER_SESSION_LOG.USER_ID
    override fun field4(): Field<UUID?> = UserSessionLogTable.USER_SESSION_LOG.DEPLOYMENT_LOG_ID
    override fun field5(): Field<Instant?> = UserSessionLogTable.USER_SESSION_LOG.CREATION_DATE
    override fun field6(): Field<String?> = UserSessionLogTable.USER_SESSION_LOG.IP
    override fun component1(): UUID = id
    override fun component2(): String = springSessionId
    override fun component3(): UUID = userId
    override fun component4(): UUID = deploymentLogId
    override fun component5(): Instant = creationDate
    override fun component6(): String = ip
    override fun value1(): UUID = id
    override fun value2(): String = springSessionId
    override fun value3(): UUID = userId
    override fun value4(): UUID = deploymentLogId
    override fun value5(): Instant = creationDate
    override fun value6(): String = ip

    override fun value1(value: UUID?): UserSessionLogRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): UserSessionLogRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UUID?): UserSessionLogRecord {
        set(2, value)
        return this
    }

    override fun value4(value: UUID?): UserSessionLogRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Instant?): UserSessionLogRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): UserSessionLogRecord {
        set(5, value)
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: UUID?, value4: UUID?, value5: Instant?, value6: String?): UserSessionLogRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised UserSessionLogRecord
     */
    constructor(id: UUID, springSessionId: String, userId: UUID, deploymentLogId: UUID, creationDate: Instant, ip: String): this() {
        this.id = id
        this.springSessionId = springSessionId
        this.userId = userId
        this.deploymentLogId = deploymentLogId
        this.creationDate = creationDate
        this.ip = ip
        resetChangedOnNotNull()
    }
}
