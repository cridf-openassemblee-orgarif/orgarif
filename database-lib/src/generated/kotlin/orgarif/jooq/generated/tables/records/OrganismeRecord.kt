/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records


import java.time.Instant
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl

import orgarif.jooq.generated.tables.OrganismeTable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrganismeRecord private constructor() : UpdatableRecordImpl<OrganismeRecord>(OrganismeTable.ORGANISME), Record11<UUID?, String?, UUID?, UUID?, UUID?, UUID?, Int?, Boolean?, String?, Instant?, Instant?> {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var nom: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var departementId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var natureJuridiqueId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var secteurId: UUID?
        set(value): Unit = set(4, value)
        get(): UUID? = get(4) as UUID?

    open var typeStructureId: UUID?
        set(value): Unit = set(5, value)
        get(): UUID? = get(5) as UUID?

    open var nombreRepresentants: Int
        set(value): Unit = set(6, value)
        get(): Int = get(6) as Int

    open var presenceSuppleants: Boolean
        set(value): Unit = set(7, value)
        get(): Boolean = get(7) as Boolean

    open var status: String
        set(value): Unit = set(8, value)
        get(): String = get(8) as String

    open var creationDate: Instant
        set(value): Unit = set(9, value)
        get(): Instant = get(9) as Instant

    open var lastModificationDate: Instant
        set(value): Unit = set(10, value)
        get(): Instant = get(10) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<UUID?, String?, UUID?, UUID?, UUID?, UUID?, Int?, Boolean?, String?, Instant?, Instant?> = super.fieldsRow() as Row11<UUID?, String?, UUID?, UUID?, UUID?, UUID?, Int?, Boolean?, String?, Instant?, Instant?>
    override fun valuesRow(): Row11<UUID?, String?, UUID?, UUID?, UUID?, UUID?, Int?, Boolean?, String?, Instant?, Instant?> = super.valuesRow() as Row11<UUID?, String?, UUID?, UUID?, UUID?, UUID?, Int?, Boolean?, String?, Instant?, Instant?>
    override fun field1(): Field<UUID?> = OrganismeTable.ORGANISME.ID
    override fun field2(): Field<String?> = OrganismeTable.ORGANISME.NOM
    override fun field3(): Field<UUID?> = OrganismeTable.ORGANISME.DEPARTEMENT_ID
    override fun field4(): Field<UUID?> = OrganismeTable.ORGANISME.NATURE_JURIDIQUE_ID
    override fun field5(): Field<UUID?> = OrganismeTable.ORGANISME.SECTEUR_ID
    override fun field6(): Field<UUID?> = OrganismeTable.ORGANISME.TYPE_STRUCTURE_ID
    override fun field7(): Field<Int?> = OrganismeTable.ORGANISME.NOMBRE_REPRESENTANTS
    override fun field8(): Field<Boolean?> = OrganismeTable.ORGANISME.PRESENCE_SUPPLEANTS
    override fun field9(): Field<String?> = OrganismeTable.ORGANISME.STATUS
    override fun field10(): Field<Instant?> = OrganismeTable.ORGANISME.CREATION_DATE
    override fun field11(): Field<Instant?> = OrganismeTable.ORGANISME.LAST_MODIFICATION_DATE
    override fun component1(): UUID = id
    override fun component2(): String = nom
    override fun component3(): UUID? = departementId
    override fun component4(): UUID? = natureJuridiqueId
    override fun component5(): UUID? = secteurId
    override fun component6(): UUID? = typeStructureId
    override fun component7(): Int = nombreRepresentants
    override fun component8(): Boolean = presenceSuppleants
    override fun component9(): String = status
    override fun component10(): Instant = creationDate
    override fun component11(): Instant = lastModificationDate
    override fun value1(): UUID = id
    override fun value2(): String = nom
    override fun value3(): UUID? = departementId
    override fun value4(): UUID? = natureJuridiqueId
    override fun value5(): UUID? = secteurId
    override fun value6(): UUID? = typeStructureId
    override fun value7(): Int = nombreRepresentants
    override fun value8(): Boolean = presenceSuppleants
    override fun value9(): String = status
    override fun value10(): Instant = creationDate
    override fun value11(): Instant = lastModificationDate

    override fun value1(value: UUID?): OrganismeRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): OrganismeRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UUID?): OrganismeRecord {
        set(2, value)
        return this
    }

    override fun value4(value: UUID?): OrganismeRecord {
        set(3, value)
        return this
    }

    override fun value5(value: UUID?): OrganismeRecord {
        set(4, value)
        return this
    }

    override fun value6(value: UUID?): OrganismeRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Int?): OrganismeRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Boolean?): OrganismeRecord {
        set(7, value)
        return this
    }

    override fun value9(value: String?): OrganismeRecord {
        set(8, value)
        return this
    }

    override fun value10(value: Instant?): OrganismeRecord {
        set(9, value)
        return this
    }

    override fun value11(value: Instant?): OrganismeRecord {
        set(10, value)
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: UUID?, value4: UUID?, value5: UUID?, value6: UUID?, value7: Int?, value8: Boolean?, value9: String?, value10: Instant?, value11: Instant?): OrganismeRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised OrganismeRecord
     */
    constructor(id: UUID, nom: String, departementId: UUID? = null, natureJuridiqueId: UUID? = null, secteurId: UUID? = null, typeStructureId: UUID? = null, nombreRepresentants: Int, presenceSuppleants: Boolean, status: String, creationDate: Instant, lastModificationDate: Instant): this() {
        this.id = id
        this.nom = nom
        this.departementId = departementId
        this.natureJuridiqueId = natureJuridiqueId
        this.secteurId = secteurId
        this.typeStructureId = typeStructureId
        this.nombreRepresentants = nombreRepresentants
        this.presenceSuppleants = presenceSuppleants
        this.status = status
        this.creationDate = creationDate
        this.lastModificationDate = lastModificationDate
        resetChangedOnNotNull()
    }
}
