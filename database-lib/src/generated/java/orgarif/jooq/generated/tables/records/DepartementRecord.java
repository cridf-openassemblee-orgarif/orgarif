/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records;


import java.time.Instant;
import java.util.UUID;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import orgarif.jooq.generated.tables.DepartementTable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartementRecord extends UpdatableRecordImpl<DepartementRecord> implements Record6<UUID, String, String, String, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.departement.id</code>.
     */
    public void setId(@Nonnull UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.departement.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.departement.libelle</code>.
     */
    public void setLibelle(@Nonnull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.departement.libelle</code>.
     */
    @Nonnull
    public String getLibelle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.departement.code</code>.
     */
    public void setCode(@Nonnull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.departement.code</code>.
     */
    @Nonnull
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.departement.status</code>.
     */
    public void setStatus(@Nonnull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.departement.status</code>.
     */
    @Nonnull
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.departement.creation_date</code>.
     */
    public void setCreationDate(@Nonnull Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.departement.creation_date</code>.
     */
    @Nonnull
    public Instant getCreationDate() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>public.departement.last_modification_date</code>.
     */
    public void setLastModificationDate(@Nonnull Instant value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.departement.last_modification_date</code>.
     */
    @Nonnull
    public Instant getLastModificationDate() {
        return (Instant) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row6<UUID, String, String, String, Instant, Instant> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row6<UUID, String, String, String, Instant, Instant> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<UUID> field1() {
        return DepartementTable.DEPARTEMENT.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return DepartementTable.DEPARTEMENT.LIBELLE;
    }

    @Override
    @Nonnull
    public Field<String> field3() {
        return DepartementTable.DEPARTEMENT.CODE;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return DepartementTable.DEPARTEMENT.STATUS;
    }

    @Override
    @Nonnull
    public Field<Instant> field5() {
        return DepartementTable.DEPARTEMENT.CREATION_DATE;
    }

    @Override
    @Nonnull
    public Field<Instant> field6() {
        return DepartementTable.DEPARTEMENT.LAST_MODIFICATION_DATE;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public String component2() {
        return getLibelle();
    }

    @Override
    @Nonnull
    public String component3() {
        return getCode();
    }

    @Override
    @Nonnull
    public String component4() {
        return getStatus();
    }

    @Override
    @Nonnull
    public Instant component5() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Instant component6() {
        return getLastModificationDate();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public String value2() {
        return getLibelle();
    }

    @Override
    @Nonnull
    public String value3() {
        return getCode();
    }

    @Override
    @Nonnull
    public String value4() {
        return getStatus();
    }

    @Override
    @Nonnull
    public Instant value5() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Instant value6() {
        return getLastModificationDate();
    }

    @Override
    @Nonnull
    public DepartementRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord value2(@Nonnull String value) {
        setLibelle(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord value3(@Nonnull String value) {
        setCode(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord value4(@Nonnull String value) {
        setStatus(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord value5(@Nonnull Instant value) {
        setCreationDate(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord value6(@Nonnull Instant value) {
        setLastModificationDate(value);
        return this;
    }

    @Override
    @Nonnull
    public DepartementRecord values(@Nonnull UUID value1, @Nonnull String value2, @Nonnull String value3, @Nonnull String value4, @Nonnull Instant value5, @Nonnull Instant value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartementRecord
     */
    public DepartementRecord() {
        super(DepartementTable.DEPARTEMENT);
    }

    /**
     * Create a detached, initialised DepartementRecord
     */
    public DepartementRecord(@Nonnull UUID id, @Nonnull String libelle, @Nonnull String code, @Nonnull String status, @Nonnull Instant creationDate, @Nonnull Instant lastModificationDate) {
        super(DepartementTable.DEPARTEMENT);

        setId(id);
        setLibelle(libelle);
        setCode(code);
        setStatus(status);
        setCreationDate(creationDate);
        setLastModificationDate(lastModificationDate);
        resetChangedOnNotNull();
    }
}
