/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import orgarif.jooq.generated.tables.RepresentantInstanceTable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepresentantInstanceRecord extends UpdatableRecordImpl<RepresentantInstanceRecord> implements Record7<UUID, UUID, UUID, Integer, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -519422890;

    /**
     * Setter for <code>orgarif.representant_instance.id</code>.
     */
    public void setId(@Nonnull UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.id</code>.
     */
    @Nonnull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>orgarif.representant_instance.elu_id</code>.
     */
    public void setEluId(@Nonnull UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.elu_id</code>.
     */
    @Nonnull
    public UUID getEluId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>orgarif.representant_instance.instance_id</code>.
     */
    public void setInstanceId(@Nonnull UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.instance_id</code>.
     */
    @Nonnull
    public UUID getInstanceId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>orgarif.representant_instance.position</code>.
     */
    public void setPosition(@Nonnull Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.position</code>.
     */
    @Nonnull
    public Integer getPosition() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>orgarif.representant_instance.is_suppleant</code>.
     */
    public void setIsSuppleant(@Nonnull Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.is_suppleant</code>.
     */
    @Nonnull
    public Boolean getIsSuppleant() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>orgarif.representant_instance.creation_date</code>.
     */
    public void setCreationDate(@Nonnull LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.creation_date</code>.
     */
    @Nonnull
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>orgarif.representant_instance.last_modification_date</code>.
     */
    public void setLastModificationDate(@Nonnull LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>orgarif.representant_instance.last_modification_date</code>.
     */
    @Nonnull
    public LocalDateTime getLastModificationDate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, UUID, Integer, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, UUID, Integer, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.ID;
    }

    @Override
    public Field<UUID> field2() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.ELU_ID;
    }

    @Override
    public Field<UUID> field3() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.INSTANCE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.POSITION;
    }

    @Override
    public Field<Boolean> field5() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.IS_SUPPLEANT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.CREATION_DATE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return RepresentantInstanceTable.REPRESENTANT_INSTANCE.LAST_MODIFICATION_DATE;
    }

    @Override
    @Nonnull
    public UUID component1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getEluId();
    }

    @Override
    @Nonnull
    public UUID component3() {
        return getInstanceId();
    }

    @Override
    @Nonnull
    public Integer component4() {
        return getPosition();
    }

    @Override
    @Nonnull
    public Boolean component5() {
        return getIsSuppleant();
    }

    @Override
    @Nonnull
    public LocalDateTime component6() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public LocalDateTime component7() {
        return getLastModificationDate();
    }

    @Override
    @Nonnull
    public UUID value1() {
        return getId();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getEluId();
    }

    @Override
    @Nonnull
    public UUID value3() {
        return getInstanceId();
    }

    @Override
    @Nonnull
    public Integer value4() {
        return getPosition();
    }

    @Override
    @Nonnull
    public Boolean value5() {
        return getIsSuppleant();
    }

    @Override
    @Nonnull
    public LocalDateTime value6() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public LocalDateTime value7() {
        return getLastModificationDate();
    }

    @Override
    public RepresentantInstanceRecord value1(@Nonnull UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value2(@Nonnull UUID value) {
        setEluId(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value3(@Nonnull UUID value) {
        setInstanceId(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value4(@Nonnull Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value5(@Nonnull Boolean value) {
        setIsSuppleant(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value6(@Nonnull LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord value7(@Nonnull LocalDateTime value) {
        setLastModificationDate(value);
        return this;
    }

    @Override
    public RepresentantInstanceRecord values(@Nonnull UUID value1, @Nonnull UUID value2, @Nonnull UUID value3, @Nonnull Integer value4, @Nonnull Boolean value5, @Nonnull LocalDateTime value6, @Nonnull LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RepresentantInstanceRecord
     */
    public RepresentantInstanceRecord() {
        super(RepresentantInstanceTable.REPRESENTANT_INSTANCE);
    }

    /**
     * Create a detached, initialised RepresentantInstanceRecord
     */
    public RepresentantInstanceRecord(@Nonnull UUID id, @Nonnull UUID eluId, @Nonnull UUID instanceId, @Nonnull Integer position, @Nonnull Boolean isSuppleant, @Nonnull LocalDateTime creationDate, @Nonnull LocalDateTime lastModificationDate) {
        super(RepresentantInstanceTable.REPRESENTANT_INSTANCE);

        set(0, id);
        set(1, eluId);
        set(2, instanceId);
        set(3, position);
        set(4, isSuppleant);
        set(5, creationDate);
        set(6, lastModificationDate);
    }
}
