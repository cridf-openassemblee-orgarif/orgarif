/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import orgarif.jooq.generated.tables.MagicLinkTokenTable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagicLinkTokenRecord extends UpdatableRecordImpl<MagicLinkTokenRecord> implements Record4<String, UUID, LocalDateTime, Boolean> {

    private static final long serialVersionUID = -1937325424;

    /**
     * Setter for <code>orgarif.magic_link_token.token</code>.
     */
    public void setToken(@Nonnull String value) {
        set(0, value);
    }

    /**
     * Getter for <code>orgarif.magic_link_token.token</code>.
     */
    @Nonnull
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>orgarif.magic_link_token.user_id</code>.
     */
    public void setUserId(@Nonnull UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>orgarif.magic_link_token.user_id</code>.
     */
    @Nonnull
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>orgarif.magic_link_token.creation_date</code>.
     */
    public void setCreationDate(@Nonnull LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>orgarif.magic_link_token.creation_date</code>.
     */
    @Nonnull
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>orgarif.magic_link_token.validity</code>.
     */
    public void setValidity(@Nonnull Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>orgarif.magic_link_token.validity</code>.
     */
    @Nonnull
    public Boolean getValidity() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, UUID, LocalDateTime, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, UUID, LocalDateTime, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.TOKEN;
    }

    @Override
    public Field<UUID> field2() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.CREATION_DATE;
    }

    @Override
    public Field<Boolean> field4() {
        return MagicLinkTokenTable.MAGIC_LINK_TOKEN.VALIDITY;
    }

    @Override
    @Nonnull
    public String component1() {
        return getToken();
    }

    @Override
    @Nonnull
    public UUID component2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public LocalDateTime component3() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Boolean component4() {
        return getValidity();
    }

    @Override
    @Nonnull
    public String value1() {
        return getToken();
    }

    @Override
    @Nonnull
    public UUID value2() {
        return getUserId();
    }

    @Override
    @Nonnull
    public LocalDateTime value3() {
        return getCreationDate();
    }

    @Override
    @Nonnull
    public Boolean value4() {
        return getValidity();
    }

    @Override
    public MagicLinkTokenRecord value1(@Nonnull String value) {
        setToken(value);
        return this;
    }

    @Override
    public MagicLinkTokenRecord value2(@Nonnull UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public MagicLinkTokenRecord value3(@Nonnull LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public MagicLinkTokenRecord value4(@Nonnull Boolean value) {
        setValidity(value);
        return this;
    }

    @Override
    public MagicLinkTokenRecord values(@Nonnull String value1, @Nonnull UUID value2, @Nonnull LocalDateTime value3, @Nonnull Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MagicLinkTokenRecord
     */
    public MagicLinkTokenRecord() {
        super(MagicLinkTokenTable.MAGIC_LINK_TOKEN);
    }

    /**
     * Create a detached, initialised MagicLinkTokenRecord
     */
    public MagicLinkTokenRecord(@Nonnull String token, @Nonnull UUID userId, @Nonnull LocalDateTime creationDate, @Nonnull Boolean validity) {
        super(MagicLinkTokenTable.MAGIC_LINK_TOKEN);

        set(0, token);
        set(1, userId);
        set(2, creationDate);
        set(3, validity);
    }
}
