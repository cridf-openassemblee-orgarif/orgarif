/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import orgarif.jooq.generated.Indexes;
import orgarif.jooq.generated.Keys;
import orgarif.jooq.generated.OrgarifTable;
import orgarif.jooq.generated.tables.records.InstanceDeliberationRecord;
import orgarif.jooq.tools.jooq.CharToUUIDConverter;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstanceDeliberationTable extends TableImpl<InstanceDeliberationRecord> {

    private static final long serialVersionUID = 1290122569;

    /**
     * The reference instance of <code>orgarif.instance_deliberation</code>
     */
    public static final InstanceDeliberationTable INSTANCE_DELIBERATION = new InstanceDeliberationTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstanceDeliberationRecord> getRecordType() {
        return InstanceDeliberationRecord.class;
    }

    /**
     * The column <code>orgarif.instance_deliberation.id</code>.
     */
    public final TableField<InstanceDeliberationRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "", new CharToUUIDConverter());

    /**
     * The column <code>orgarif.instance_deliberation.instance_id</code>.
     */
    public final TableField<InstanceDeliberationRecord, UUID> INSTANCE_ID = createField(DSL.name("instance_id"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "", new CharToUUIDConverter());

    /**
     * The column <code>orgarif.instance_deliberation.deliberation_id</code>.
     */
    public final TableField<InstanceDeliberationRecord, UUID> DELIBERATION_ID = createField(DSL.name("deliberation_id"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "", new CharToUUIDConverter());

    /**
     * Create a <code>orgarif.instance_deliberation</code> table reference
     */
    public InstanceDeliberationTable() {
        this(DSL.name("instance_deliberation"), null);
    }

    /**
     * Create an aliased <code>orgarif.instance_deliberation</code> table reference
     */
    public InstanceDeliberationTable(String alias) {
        this(DSL.name(alias), INSTANCE_DELIBERATION);
    }

    /**
     * Create an aliased <code>orgarif.instance_deliberation</code> table reference
     */
    public InstanceDeliberationTable(Name alias) {
        this(alias, INSTANCE_DELIBERATION);
    }

    private InstanceDeliberationTable(Name alias, Table<InstanceDeliberationRecord> aliased) {
        this(alias, aliased, null);
    }

    private InstanceDeliberationTable(Name alias, Table<InstanceDeliberationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> InstanceDeliberationTable(Table<O> child, ForeignKey<O, InstanceDeliberationRecord> key) {
        super(child, key, INSTANCE_DELIBERATION);
    }

    @Override
    public Schema getSchema() {
        return OrgarifTable.ORGARIF;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INSTANCE_DELIBERATION_DELIBERATION_ID, Indexes.INSTANCE_DELIBERATION_INSTANCE_DELIBERATION_INSTANCE_ID_IDX);
    }

    @Override
    public UniqueKey<InstanceDeliberationRecord> getPrimaryKey() {
        return Keys.KEY_INSTANCE_DELIBERATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<InstanceDeliberationRecord>> getKeys() {
        return Arrays.<UniqueKey<InstanceDeliberationRecord>>asList(Keys.KEY_INSTANCE_DELIBERATION_PRIMARY);
    }

    @Override
    public List<ForeignKey<InstanceDeliberationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InstanceDeliberationRecord, ?>>asList(Keys.INSTANCE_DELIBERATION_IBFK_1, Keys.INSTANCE_DELIBERATION_IBFK_2);
    }

    public InstanceTable instance() {
        return new InstanceTable(this, Keys.INSTANCE_DELIBERATION_IBFK_1);
    }

    public DeliberationTable deliberation() {
        return new DeliberationTable(this, Keys.INSTANCE_DELIBERATION_IBFK_2);
    }

    @Override
    public InstanceDeliberationTable as(String alias) {
        return new InstanceDeliberationTable(DSL.name(alias), this);
    }

    @Override
    public InstanceDeliberationTable as(Name alias) {
        return new InstanceDeliberationTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InstanceDeliberationTable rename(String name) {
        return new InstanceDeliberationTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InstanceDeliberationTable rename(Name name) {
        return new InstanceDeliberationTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, UUID> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
