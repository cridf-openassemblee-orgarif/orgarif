/*
 * This file is generated by jOOQ.
 */
package orgarif.jooq.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import orgarif.jooq.generated.Keys;
import orgarif.jooq.generated.OrgarifTable;
import orgarif.jooq.generated.tables.records.DeploymentLogRecord;
import orgarif.jooq.tools.jooq.CharToUUIDConverter;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeploymentLogTable extends TableImpl<DeploymentLogRecord> {

    private static final long serialVersionUID = 443040576;

    /**
     * The reference instance of <code>orgarif.deployment_log</code>
     */
    public static final DeploymentLogTable DEPLOYMENT_LOG = new DeploymentLogTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeploymentLogRecord> getRecordType() {
        return DeploymentLogRecord.class;
    }

    /**
     * The column <code>orgarif.deployment_log.id</code>.
     */
    public final TableField<DeploymentLogRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "", new CharToUUIDConverter());

    /**
     * The column <code>orgarif.deployment_log.build_version</code>.
     */
    public final TableField<DeploymentLogRecord, String> BUILD_VERSION = createField(DSL.name("build_version"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>orgarif.deployment_log.system_zone_id</code>.
     */
    public final TableField<DeploymentLogRecord, String> SYSTEM_ZONE_ID = createField(DSL.name("system_zone_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>orgarif.deployment_log.startup_date</code>.
     */
    public final TableField<DeploymentLogRecord, LocalDateTime> STARTUP_DATE = createField(DSL.name("startup_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>orgarif.deployment_log.shutdown_date</code>.
     */
    public final TableField<DeploymentLogRecord, LocalDateTime> SHUTDOWN_DATE = createField(DSL.name("shutdown_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>orgarif.deployment_log</code> table reference
     */
    public DeploymentLogTable() {
        this(DSL.name("deployment_log"), null);
    }

    /**
     * Create an aliased <code>orgarif.deployment_log</code> table reference
     */
    public DeploymentLogTable(String alias) {
        this(DSL.name(alias), DEPLOYMENT_LOG);
    }

    /**
     * Create an aliased <code>orgarif.deployment_log</code> table reference
     */
    public DeploymentLogTable(Name alias) {
        this(alias, DEPLOYMENT_LOG);
    }

    private DeploymentLogTable(Name alias, Table<DeploymentLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeploymentLogTable(Name alias, Table<DeploymentLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DeploymentLogTable(Table<O> child, ForeignKey<O, DeploymentLogRecord> key) {
        super(child, key, DEPLOYMENT_LOG);
    }

    @Override
    public Schema getSchema() {
        return OrgarifTable.ORGARIF;
    }

    @Override
    public UniqueKey<DeploymentLogRecord> getPrimaryKey() {
        return Keys.KEY_DEPLOYMENT_LOG_PRIMARY;
    }

    @Override
    public List<UniqueKey<DeploymentLogRecord>> getKeys() {
        return Arrays.<UniqueKey<DeploymentLogRecord>>asList(Keys.KEY_DEPLOYMENT_LOG_PRIMARY);
    }

    @Override
    public DeploymentLogTable as(String alias) {
        return new DeploymentLogTable(DSL.name(alias), this);
    }

    @Override
    public DeploymentLogTable as(Name alias) {
        return new DeploymentLogTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeploymentLogTable rename(String name) {
        return new DeploymentLogTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeploymentLogTable rename(Name name) {
        return new DeploymentLogTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
